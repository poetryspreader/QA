{
	"info": {
		"_postman_id": "ff7b6d19-003b-42a0-834d-f502a732801b",
		"name": "postman_hw_2",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "24088631"
	},
	"item": [
		{
			"name": "first",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Body matches string\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"This is the first responce from server!ss\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/first",
					"host": [
						"{{url}}"
					],
					"path": [
						"first"
					]
				}
			},
			"response": []
		},
		{
			"name": "user_info_3",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var respData = pm.response.json();\r",
							"\r",
							"var reqData = request.data;\r",
							"var reqName = reqData.name;\r",
							"var reqSalary = +reqData.salary;\r",
							"var reqAge = reqData.age;\r",
							"\r",
							"pm.test(\"name\", function () {\r",
							"    pm.expect(respData.name).to.eql(reqName);\r",
							"});\r",
							"\r",
							"pm.test(\"age\", function () {\r",
							"    pm.expect(respData.age).to.eql(reqAge);\r",
							"});\r",
							"\r",
							"pm.test(\"salary\", function () {\r",
							"    pm.expect(respData.salary).to.eql(reqSalary);\r",
							"});\r",
							"\r",
							"pm.test(\"u_salary_1_5_year\", function () {\r",
							"    pm.expect(respData.family.u_salary_1_5_year).to.eql(reqSalary*4);\r",
							"});\r",
							"\r",
							"console.log(respData.family);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "name",
							"value": "alex",
							"type": "text"
						},
						{
							"key": "age",
							"value": "30",
							"type": "text"
						},
						{
							"key": "salary",
							"value": "10000",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "{{url}}/user_info_3",
					"host": [
						"{{url}}"
					],
					"path": [
						"user_info_3"
					]
				}
			},
			"response": []
		},
		{
			"name": "object_info_3",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var respData = pm.response.json();\r",
							"\r",
							"var reqData = request.data;\r",
							"var reqName = reqData.name;\r",
							"var reqSalary = +reqData.salary;\r",
							"var reqAge = reqData.age;\r",
							"\r",
							"pm.test(\"name\", function () {\r",
							"    pm.expect(respData.name).to.eql(reqName);\r",
							"});\r",
							"pm.test(\"salary\", function () {\r",
							"    pm.expect(respData.salary).to.eql(reqSalary);\r",
							"});\r",
							"pm.test(\"age\", function () {\r",
							"    pm.expect(respData.age).to.eql(reqAge);\r",
							"});\r",
							"\r",
							"console.log(respData.family);\r",
							"\r",
							"pm.test(\"Existence of dog's name\", function () {\r",
							"    pm.expect(respData.family.pets.dog).to.have.property(\"name\");\r",
							"});\r",
							"pm.test(\"Existence of dog's age\", function () {\r",
							"    pm.expect(respData.family.pets.dog).to.have.property(\"age\");\r",
							"});\r",
							"pm.test(\"Name is Luky\", function () {\r",
							"    pm.expect(respData.family.pets.dog.name).to.eql(\"Luky\");\r",
							"});\r",
							"pm.test(\"Age is 4\", function () {\r",
							"    pm.expect(respData.family.pets.dog.age).to.eql(4);\r",
							"});\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "name",
							"value": "alex"
						},
						{
							"key": "age",
							"value": "30"
						},
						{
							"key": "salary",
							"value": "10000"
						}
					]
				},
				"url": {
					"raw": "{{url}}/object_info_3?name=alex&age=30&salary=10000",
					"host": [
						"{{url}}"
					],
					"path": [
						"object_info_3"
					],
					"query": [
						{
							"key": "name",
							"value": "alex"
						},
						{
							"key": "age",
							"value": "30"
						},
						{
							"key": "salary",
							"value": "10000"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "object_info_4",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var respData = pm.response.json();\r",
							"\r",
							"var reqData = request.data;\r",
							"var reqName = reqData.name;\r",
							"var reqSalary = +reqData.salary;\r",
							"var reqAge = +reqData.age;\r",
							"\r",
							"pm.test(\"name\", function () {\r",
							"    pm.expect(respData.name).to.eql(reqName);\r",
							"});\r",
							"pm.test(\"name\", function () {\r",
							"    pm.expect(respData.age).to.eql(reqAge);\r",
							"});\r",
							"console.log(reqSalary);\r",
							"console.log(respData.salary);\r",
							"console.log(respData.salary[0]);\r",
							"console.log(respData.salary[1]);\r",
							"console.log(respData.salary[2]);\r",
							"\r",
							"pm.test(\"salary_0\", function () {\r",
							"    pm.expect(respData.salary[0]).to.eql(reqSalary);\r",
							"});\r",
							"pm.test(\"salary_1\", function () {\r",
							"    pm.expect(+respData.salary[1]).to.eql(reqSalary*2);\r",
							"});\r",
							"pm.test(\"salary_1\", function () {\r",
							"    pm.expect(+respData.salary[2]).to.eql(reqSalary*3);\r",
							"});\r",
							"\r",
							"pm.collectionVariables.set(\"name\", \"Ilja\");\r",
							"pm.collectionVariables.set(\"age\", \"25\");\r",
							"pm.collectionVariables.set(\"salary\", \"100000\");\r",
							"\r",
							"for(let i = 0; i<respData.salary;i++){\r",
							"    console.log(respData.salary[i]);\r",
							"}\r",
							"\r",
							"\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "name",
							"value": "Dima"
						},
						{
							"key": "age",
							"value": "45"
						},
						{
							"key": "salary",
							"value": "10000"
						}
					]
				},
				"url": {
					"raw": "{{url}}/object_info_4?name=Dima&age=45&salary=10000",
					"host": [
						"{{url}}"
					],
					"path": [
						"object_info_4"
					],
					"query": [
						{
							"key": "name",
							"value": "Dima"
						},
						{
							"key": "age",
							"value": "45"
						},
						{
							"key": "salary",
							"value": "10000"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "user_info_2",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var respData = pm.response.json();\r",
							"\r",
							"var reqData = request.data;\r",
							"var reqName = reqData.name;\r",
							"var reqSalary = +reqData.salary;\r",
							"var reqAge = +reqData.age;\r",
							"\r",
							"pm.test(\"Existence of start_qa_salary\", function () {\r",
							"    pm.expect(respData).to.have.property(\"start_qa_salary\");\r",
							"});\r",
							"pm.test(\"Existence of qa_salary_after_6_months\", function () {\r",
							"    pm.expect(respData).to.have.property(\"qa_salary_after_6_months\");\r",
							"});\r",
							"pm.test(\"Existence of qa_salary_after_12_months\", function () {\r",
							"    pm.expect(respData).to.have.property(\"qa_salary_after_12_months\");\r",
							"});\r",
							"pm.test(\"Existence of qa_salary_after_1.5_year\", function () {\r",
							"    pm.expect(respData).to.have.property(\"qa_salary_after_1.5_year\");\r",
							"});\r",
							"pm.test(\"Existence of qa_salary_after_3.5_years\", function () {\r",
							"    pm.expect(respData).to.have.property(\"qa_salary_after_3.5_years\");\r",
							"});\r",
							"pm.test(\"Existence of person\", function () {\r",
							"    pm.expect(respData).to.have.property(\"person\");\r",
							"});\r",
							"\r",
							"pm.test(\"start_qa_salary equals\", function () {\r",
							"    pm.expect(respData.start_qa_salary).to.eql(reqSalary);\r",
							"});\r",
							"pm.test(\"qa_salary_after_6_months equals\", function () {\r",
							"    pm.expect(respData.qa_salary_after_6_months).to.eql(reqSalary*2);\r",
							"});\r",
							"pm.test(\"qa_salary_after_12_months equals\", function () {\r",
							"    pm.expect(respData.qa_salary_after_12_months).to.eql(reqSalary*2.7);\r",
							"});\r",
							"pm.test(\"qa_salary_after_1.5_year equals\", function () {\r",
							"    pm.expect(respData[\"qa_salary_after_1.5_year\"]).to.eql(reqSalary*3.3);\r",
							"});\r",
							"pm.test(\"qa_salary_after_3.5_year equals\", function () {\r",
							"    pm.expect(respData[\"qa_salary_after_3.5_years\"]).to.eql(reqSalary*3.8);\r",
							"});\r",
							"\r",
							"pm.test(\"u_name equals\", function () {\r",
							"    pm.expect(respData.person.u_name[1]).to.eql(reqSalary);\r",
							"});\r",
							"pm.test(\"u_age equals\", function () {\r",
							"    pm.expect(respData.person.u_age).to.eql(reqAge);\r",
							"});\r",
							"pm.test(\"u_salary_5_years equals\", function () {\r",
							"    pm.expect(respData.person.u_salary_5_years).to.eql(reqSalary*4.2);\r",
							"});\r",
							"\r",
							"for(item in respData.person){\r",
							"    console.log(item);\r",
							"}\r",
							"\r",
							"\r",
							"\r",
							"\r",
							"\r",
							"\r",
							"console.log(respData);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "name",
							"value": "{{name}}",
							"type": "text"
						},
						{
							"key": "age",
							"value": "{{age}}",
							"type": "text"
						},
						{
							"key": "salary",
							"value": "{{salary}}",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "{{url}}/user_info_2",
					"host": [
						"{{url}}"
					],
					"path": [
						"user_info_2"
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					"pm.test(\"Status code is 200\", function () {",
					"    pm.response.to.have.status(200);",
					"});"
				]
			}
		}
	],
	"variable": [
		{
			"key": "url",
			"value": "",
			"type": "string"
		},
		{
			"key": "name",
			"value": ""
		},
		{
			"key": "age",
			"value": ""
		},
		{
			"key": "salary",
			"value": ""
		}
	]
}